buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath group: 'net.sf.saxon', name: 'Saxon-HE', version: saxonVersion
  }
}

plugins {
  id "java"
  id "osgi"
  id "maven"
  // id "maven-publish"
  // id "signing"
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "http://maven.restlet.org" }
}

configurations {
  copydep {
    extendsFrom runtime
  }
  copydep.exclude module: 'xmlcalabash'
  copydep.exclude module: 'nwalsh-annotations'
  // opydep.exclude module: 'slf4j-api'
}

configurations.all {
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    if (details.requested.name == 'saxon' && details.requested.version == '8.7') {
      details.useTarget "net.sf.saxon:Saxon-HE:" + saxonVersion
    }
  }
}

dependencies {
  compile fileTree(dir: 'lib').include("*.jar")
  compile (
    [group: 'com.nwalsh', name: 'nwalsh-annotations', version: '1.0.0'],
    [group: 'com.xmlcalabash', name: 'xmlcalabash', version: '1.1.1-95'],

    // https://mvnrepository.com/artifact/com.github.wumpz/diffutils
     [group: 'com.github.wumpz', name: 'diffutils', version: '2.2']
  )
}

project.ext.saxonRelease = saxonVersion.substring(0,5)
project.ext.saxonBranch  = saxonVersion.substring(0,3).replaceAll("\\.", "")
project.ext.releaseVersion = '0.0.0.3'
project.ext.distVersion = '0.0.0.3'
version = '0.0.0.3'

task copyLib(type: Copy) {
  FileCollection lib = configurations.copydep
  String path = ""
  lib.each {
    File file -> path += " lib/" + file.name
  }
  project.ext.runtimeClasspath = path.trim()
  from lib
  into { "build/dist/lib" }
}

jar {
  manifest {
    instruction 'Built-By', builtBy
    instruction 'Implementation-Vendor', 'Liam Quin'
    instruction 'Implementation-Title', 'XML Calabash TextDiff Step'
    instruction 'Implementation-Version', project.ext.distVersion
    instruction 'Bundle-SymbolicName', 'com.delightfulcomputing.textdiff'
    instruction 'Bundle-RequiredExecutionEnvironment', 'J2SE-1.7'
    instruction 'Export-Package', '*, etc'
    instruction 'Import-Package', 'net.sf.saxon.*;version=' + project.ext.saxonRelease + ',\
  javax.crypto.*,\
  javax.xml.*,\
  org.apache.commons.httpclient.*,\
  org.xml.sax.*,\
  *;resolution:=optional'
    instruction 'DynamicImport-Package', '*'
    instruction 'Class-Path', project.ext.runtimeClasspath + " lib"
  }
}

task copyNotices(type: Copy) {
  from 'resources/notices'
  into 'build/dist/docs/notices'
}
jar.dependsOn copyNotices

task copyStuff(type: Copy) {
  from 'README.adoc'
  from 'LICENSE.md'
  into 'build/dist'
}
task copyToDist(dependsOn: [copyLib,copyStuff]) {
  // nop
}
jar.dependsOn copyToDist

task javadocJar(type: Jar, dependsOn: javadoc) {
    from tasks.javadoc.destinationDir
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task copyJar(dependsOn: jar, type: Copy) {
  from "build/libs/xmlcalabash1-textdiff-" + project.ext.distVersion + ".jar"
  into "build/dist"
}

task copyJavaDoc(dependsOn: javadoc, type: Copy) {
  from "build/docs"
  into "build/dist/docs"
}

task testStep(type: JavaExec) {
  // classpath = configurations.copydep + configurations.runtime + sourceSets.main.output

  // main = 'com.xmlcalabash.drivers.Main'
  // maxHeapSize = "1024m"
  // args('-D', '-a', 'src/test/resources/test-pipeline.xpl')
}

task makeDist(dependsOn: [ build, copyJar, copyLib ]) {
  doLast {
    println "Created distribution in build/dist"
  }
}

task zipDist(dependsOn: makeDist, type: Zip) {
  from('build/dist')
  into 'xmlcalabash1-textdiff-' + project.ext.distVersion
  archiveName 'xmlcalabash1-textdiff-' + project.ext.distVersion + ".zip"
}

task dist(dependsOn: [zipDist]) {
  doLast {
      // nop
  }
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

